name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish_to_test:
        description: 'Publish to Test PyPI'
        required: false
        default: false
        type: boolean

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - run: pip install cibuildwheel==2.16.2

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
          CIBW_SKIP: "pp* *-manylinux_i686"
          CIBW_BEFORE_BUILD: "pip install -U pip setuptools wheel Cython"
          CIBW_TEST_COMMAND: "python -c \"import rugo.parquet; print('Import successful')\""
          CIBW_TEST_SKIP: "*-*linux_{ppc64le,s390x}"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install build setuptools wheel Cython
      - run: python -m build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment: pypi
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with: {name: wheels-ubuntu-latest, path: dist}
      - uses: actions/download-artifact@v4
        with: {name: wheels-macos-latest, path: dist}
      - uses: actions/download-artifact@v4
        with: {name: sdist, path: dist}
      - uses: pypa/gh-action-pypi-publish@release/v1

  publish_test:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && inputs.publish_to_test
    environment: test-pypi
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with: {name: wheels-ubuntu-latest, path: dist}
      - uses: actions/download-artifact@v4
        with: {name: wheels-macos-latest, path: dist}
      - uses: actions/download-artifact@v4
        with: {name: sdist, path: dist}
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
